-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2121
--   at:        2018-01-22 23:05:34 CET
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2


CREATE SEQUENCE vid
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

CREATE SEQUENCE nid
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

CREATE SEQUENCE cid
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

CREATE SEQUENCE sid
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;


CREATE SEQUENCE o_id
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

CREATE SEQUENCE kid
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

CREATE SEQUENCE uoiz_id
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

CREATE SEQUENCE uoz_id
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

CREATE SEQUENCE zapid
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;


-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2121
--   at:        2018-01-23 14:14:21 CET
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLE agent (
    zapid   INTEGER NOT NULL,
    brlic   INTEGER NOT NULL
);

ALTER TABLE agent ADD CONSTRAINT agent_pk PRIMARY KEY ( zapid );

ALTER TABLE agent ADD CONSTRAINT agent_brlic_un UNIQUE ( brlic );

CREATE TABLE cenovnik (
    cid        INTEGER NOT NULL,
    cdat       DATE NOT NULL,
    ctrajogl   INTEGER NOT NULL,
    ccenaogl   NUMBER(7,2) NOT NULL,
    valid      CHAR(3) NOT NULL
);

ALTER TABLE cenovnik ADD CONSTRAINT cenovnik_pk PRIMARY KEY ( cid );

CREATE TABLE drzava (
    did      CHAR(3 CHAR) NOT NULL,
    dnaziv   VARCHAR2(100) NOT NULL
);

ALTER TABLE drzava ADD CONSTRAINT drzava_pk PRIMARY KEY ( did );

ALTER TABLE drzava ADD CONSTRAINT drzava_dnaziv_un UNIQUE ( dnaziv );

CREATE TABLE grad (
    gid          CHAR(2 CHAR) NOT NULL,
    gnaziv       VARCHAR2(100 CHAR) NOT NULL,
    drzava_did   CHAR(3 CHAR) NOT NULL
);

ALTER TABLE grad ADD CONSTRAINT grad_pk PRIMARY KEY ( gid,
drzava_did );

CREATE TABLE klijent (
    kid            INTEGER NOT NULL,
    kmbr           INTEGER NOT NULL,
    kbrlk          INTEGER NOT NULL,
    kpib           INTEGER,
    knazivfirme    VARCHAR2(100),
    kvrsta         VARCHAR2(20) DEFAULT 'Fizicko lice' NOT NULL,
    kime           VARCHAR2(40) NOT NULL,
    kprz           VARCHAR2(40) NOT NULL,
    kadr           VARCHAR2(100) NOT NULL,
    ktel           INTEGER,
    kemail         VARCHAR2(40),
    kuloga         VARCHAR2(20) DEFAULT 'ZKPD' NOT NULL,
    grad_gid       CHAR(2 CHAR) NOT NULL,
    grad_did       CHAR(3 CHAR) NOT NULL,
    kpib1          INTEGER,
    knazivfirme1   VARCHAR2(100)
);

ALTER TABLE klijent
    ADD CHECK ( kvrsta IN (
        'Fizicko lice',
        'Pravno lice'
    ) );

ALTER TABLE klijent
    ADD CHECK ( kuloga IN (
        'Zakupac',
        'Zakupodavac'
    ) );

ALTER TABLE klijent ADD CONSTRAINT klijent_pk PRIMARY KEY ( kid );

ALTER TABLE klijent
    ADD CONSTRAINT klijent_kmbr_kbrlk_kuloga_un UNIQUE ( kmbr,
    kbrlk,
    kuloga );

ALTER TABLE klijent ADD CONSTRAINT klijent_kpib1_un UNIQUE ( kpib1 );

ALTER TABLE klijent ADD CONSTRAINT klijent_pib__un UNIQUE ( kpib );

CREATE TABLE nekretnina (
    nid                    INTEGER NOT NULL,
    nadr                   VARCHAR2(100) NOT NULL,
    npovr                  NUMBER(5,2) NOT NULL,
    nsoba                  NUMBER(3,2) NOT NULL,
    nkup                   INTEGER,
    nspr                   INTEGER,
    ngodizgr               NUMBER(4),
    nstanje                VARCHAR2(20) DEFAULT 'Novogradnja' NOT NULL,
    ngrej                  VARCHAR2(50) DEFAULT 'Centralno' NOT NULL,
    nlift                  NUMBER,
    nplacanje              VARCHAR2(20) NOT NULL,
    vrsta_nekretnine_vid   INTEGER NOT NULL,
    grad_gid               CHAR(2 CHAR) NOT NULL,
    grad_did               CHAR(3 CHAR) NOT NULL,
    vlasnik_kid            INTEGER NOT NULL
);

ALTER TABLE nekretnina
    ADD CHECK ( nstanje IN (
        'Novogradnja',
        'Starogradnja'
    ) );

ALTER TABLE nekretnina
    ADD CHECK ( ngrej IN (
        'Centralno',
        'Etazno',
        'Klima',
        'Ostalo',
        'Podno',
        'TA'
    ) );

ALTER TABLE nekretnina
    ADD CHECK ( nplacanje IN (
        'Godisnje',
        'Mesecno',
        'Ostalo'
    ) );

ALTER TABLE nekretnina ADD CONSTRAINT nekretnina_pk PRIMARY KEY ( nid,
vlasnik_kid );

CREATE TABLE oglas (
    o_id               INTEGER NOT NULL,
    odatobjave         DATE NOT NULL,
    okir               NUMBER(13,2) NOT NULL,
    odep               NUMBER(13,2) NOT NULL,
    oopis              VARCHAR2(500),
    o_cenovnik_cid     INTEGER NOT NULL,
    o_nekretnina_nid   INTEGER NOT NULL,
    o_valuta_valid     CHAR(3) NOT NULL,
    o_vlasnik_kid      INTEGER NOT NULL
);

CREATE UNIQUE INDEX oglas__idx ON
    oglas ( o_nekretnina_nid ASC,
    o_vlasnik_kid ASC );

ALTER TABLE oglas
    ADD CONSTRAINT oglas_pk PRIMARY KEY ( o_id,
    o_nekretnina_nid,
    o_vlasnik_kid );

CREATE TABLE sekretar (
    zapid            INTEGER NOT NULL,
    strucna_sprema   VARCHAR2(100) NOT NULL
);

ALTER TABLE sekretar ADD CONSTRAINT sekretar_pk PRIMARY KEY ( zapid );

CREATE TABLE slika (
    sid                INTEGER NOT NULL,
    sputanja           VARCHAR2(300) NOT NULL,
    sopis              VARCHAR2(200),
    oglas_o_id         INTEGER,
    o_nekretnina_nid   INTEGER,
    o_vlasnik_kid      INTEGER
);

ALTER TABLE slika ADD CONSTRAINT slika_pk PRIMARY KEY ( sid );

CREATE TABLE ugovor_o_izdavanju (
    uoiz_id               INTEGER NOT NULL,
    uoizdat               DATE NOT NULL,
    uoizopis              VARCHAR2(1000),
    izd_nekretnina_nid    INTEGER NOT NULL,
    izd_vlasnik_kid       INTEGER NOT NULL,
    izd_zaposleni_zapid   INTEGER NOT NULL
);

ALTER TABLE ugovor_o_izdavanju ADD CONSTRAINT ugovor_o_izdavanju_pk PRIMARY KEY ( uoiz_id );

ALTER TABLE ugovor_o_izdavanju ADD CONSTRAINT izd_nid_izd_vlasnik_kid_un UNIQUE ( izd_nekretnina_nid,
izd_vlasnik_kid );

CREATE TABLE ugovor_o_zakupu (
    uoz_id                INTEGER NOT NULL,
    uozugdat              DATE NOT NULL,
    uozopis               VARCHAR2(500),
    uozugkir              NUMBER(13,2) NOT NULL,
    uozugdep              NUMBER(13,2) NOT NULL,
    uozugprov             NUMBER(13,2) NOT NULL,
    uozugtrajgod          INTEGER NOT NULL,
    zak_valuta_valid      CHAR(3) NOT NULL,
    zak_zaposleni_zapid   INTEGER NOT NULL,
    zakupac_kid           INTEGER NOT NULL,
    zak_oglas_o_id        INTEGER NOT NULL,
    zak_nekretnina_nid    INTEGER NOT NULL,
    zak_vlasnik_kid       INTEGER NOT NULL
);

CREATE UNIQUE INDEX ugovor_o_zakupu__idx ON
    ugovor_o_zakupu (
        zak_oglas_o_id
    ASC,
        zak_nekretnina_nid
    ASC,
        zak_vlasnik_kid
    ASC );

ALTER TABLE ugovor_o_zakupu ADD CONSTRAINT ugovor_o_zakupu_pk PRIMARY KEY ( uoz_id );

CREATE TABLE valuta (
    valid      CHAR(3) NOT NULL,
    valnaziv   VARCHAR2(50) NOT NULL
);

ALTER TABLE valuta ADD CONSTRAINT valuta_pk PRIMARY KEY ( valid );

CREATE TABLE vrsta_nekretnine (
    vid      INTEGER NOT NULL,
    vnaziv   VARCHAR2(30) NOT NULL
);

ALTER TABLE vrsta_nekretnine ADD CONSTRAINT vrsta_nekretnine_pk PRIMARY KEY ( vid );

ALTER TABLE vrsta_nekretnine ADD CONSTRAINT vrsta_nekretnine_vnaziv_un UNIQUE ( vnaziv );

CREATE TABLE zakupac (
    kid          INTEGER NOT NULL,
    zakupac_br   INTEGER NOT NULL
);

ALTER TABLE zakupac ADD CONSTRAINT zakupac_pk PRIMARY KEY ( kid );

ALTER TABLE zakupac ADD CONSTRAINT zakupac_zakupac_br_un UNIQUE ( zakupac_br );

CREATE TABLE zakupodavac (
    kid              INTEGER NOT NULL,
    zakupodavac_br   INTEGER NOT NULL
);

ALTER TABLE zakupodavac ADD CONSTRAINT zakupodavac_pk PRIMARY KEY ( kid );

ALTER TABLE zakupodavac ADD CONSTRAINT zakupodavac_zakupodavac_br_un UNIQUE ( zakupodavac_br );

CREATE TABLE zaposleni (
    zapid      INTEGER NOT NULL,
    zapvrsta   VARCHAR2(20) DEFAULT 'Agent' NOT NULL,
    zapime     VARCHAR2(30) NOT NULL,
    zapprz     VARCHAR2(30) NOT NULL,
    zaptel     INTEGER
);

ALTER TABLE zaposleni
    ADD CHECK ( zapvrsta IN (
        'Agent',
        'Sekretar'
    ) );

ALTER TABLE zaposleni ADD CONSTRAINT zaposleni_pk PRIMARY KEY ( zapid );

ALTER TABLE agent
    ADD CONSTRAINT agent_zaposleni_fk FOREIGN KEY ( zapid )
        REFERENCES zaposleni ( zapid );

ALTER TABLE cenovnik
    ADD CONSTRAINT cenovnik_valuta_fk FOREIGN KEY ( valid )
        REFERENCES valuta ( valid );

ALTER TABLE grad
    ADD CONSTRAINT grad_drzava_fk FOREIGN KEY ( drzava_did )
        REFERENCES drzava ( did );

ALTER TABLE klijent
    ADD CONSTRAINT klijent_grad_fk FOREIGN KEY ( grad_gid,
    grad_did )
        REFERENCES grad ( gid,
        drzava_did );

ALTER TABLE nekretnina
    ADD CONSTRAINT nekretnina_grad_fk FOREIGN KEY ( grad_gid,
    grad_did )
        REFERENCES grad ( gid,
        drzava_did );

ALTER TABLE nekretnina
    ADD CONSTRAINT nekretnina_vrsta_nekretnine_fk FOREIGN KEY ( vrsta_nekretnine_vid )
        REFERENCES vrsta_nekretnine ( vid );

ALTER TABLE nekretnina
    ADD CONSTRAINT nekretnina_zakupodavac_fk FOREIGN KEY ( vlasnik_kid )
        REFERENCES zakupodavac ( kid );

ALTER TABLE oglas
    ADD CONSTRAINT oglas_cenovnik_fk FOREIGN KEY ( o_cenovnik_cid )
        REFERENCES cenovnik ( cid );

ALTER TABLE oglas
    ADD CONSTRAINT oglas_nekretnina_fk FOREIGN KEY ( o_nekretnina_nid,
    o_vlasnik_kid )
        REFERENCES nekretnina ( nid,
        vlasnik_kid );

ALTER TABLE oglas
    ADD CONSTRAINT oglas_valuta_fk FOREIGN KEY ( o_valuta_valid )
        REFERENCES valuta ( valid );

ALTER TABLE sekretar
    ADD CONSTRAINT sekretar_zaposleni_fk FOREIGN KEY ( zapid )
        REFERENCES zaposleni ( zapid );

ALTER TABLE slika
    ADD CONSTRAINT slika_oglas_fk FOREIGN KEY ( oglas_o_id,
    o_nekretnina_nid,
    o_vlasnik_kid )
        REFERENCES oglas ( o_id,
        o_nekretnina_nid,
        o_vlasnik_kid );

ALTER TABLE ugovor_o_izdavanju
    ADD CONSTRAINT ug_o_izdavanju_agent_fk FOREIGN KEY ( izd_zaposleni_zapid )
        REFERENCES agent ( zapid );

ALTER TABLE ugovor_o_izdavanju
    ADD CONSTRAINT ug_o_izdavanju_nekretnina_fk FOREIGN KEY ( izd_nekretnina_nid,
    izd_vlasnik_kid )
        REFERENCES nekretnina ( nid,
        vlasnik_kid );

ALTER TABLE ugovor_o_zakupu
    ADD CONSTRAINT ugovor_o_zakupu_agent_fk FOREIGN KEY ( zak_zaposleni_zapid )
        REFERENCES agent ( zapid );

ALTER TABLE ugovor_o_zakupu
    ADD CONSTRAINT ugovor_o_zakupu_oglas_fk FOREIGN KEY ( zak_oglas_o_id,
    zak_nekretnina_nid,
    zak_vlasnik_kid )
        REFERENCES oglas ( o_id,
        o_nekretnina_nid,
        o_vlasnik_kid );

ALTER TABLE ugovor_o_zakupu
    ADD CONSTRAINT ugovor_o_zakupu_valuta_fk FOREIGN KEY ( zak_valuta_valid )
        REFERENCES valuta ( valid );

ALTER TABLE ugovor_o_zakupu
    ADD CONSTRAINT ugovor_o_zakupu_zakupac_fk FOREIGN KEY ( zakupac_kid )
        REFERENCES zakupac ( kid );

ALTER TABLE zakupac
    ADD CONSTRAINT zakupac_klijent_fk FOREIGN KEY ( kid )
        REFERENCES klijent ( kid );

ALTER TABLE zakupodavac
    ADD CONSTRAINT zakupodavac_klijent_fk FOREIGN KEY ( kid )
        REFERENCES klijent ( kid );

CREATE OR REPLACE TRIGGER arc_fkarc_6_zakupac BEFORE
    INSERT OR UPDATE OF kid ON zakupac
    FOR EACH ROW
DECLARE
    d   VARCHAR2(20);
BEGIN
    SELECT
        a.kuloga
    INTO
        d
    FROM
        klijent a
    WHERE
        a.kid =:new.kid;

    IF
        ( d IS NULL OR d <> 'Zakupac' )
    THEN
        raise_application_error(-20223,'FK Zakupac_Klijent_FK in Table Zakupac violates Arc constraint on Table Klijent - discriminator column KUloga doesn''t have value ''Zakupac'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_6_zakupodavac BEFORE
    INSERT OR UPDATE OF kid ON zakupodavac
    FOR EACH ROW
DECLARE
    d   VARCHAR2(20);
BEGIN
    SELECT
        a.kuloga
    INTO
        d
    FROM
        klijent a
    WHERE
        a.kid =:new.kid;

    IF
        ( d IS NULL OR d <> 'Zakupodavac' )
    THEN
        raise_application_error(-20223,'FK Zakupodavac_Klijent_FK in Table Zakupodavac violates Arc constraint on Table Klijent - discriminator column KUloga doesn''t have value ''Zakupodavac'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_7_agent BEFORE
    INSERT OR UPDATE OF zapid ON agent
    FOR EACH ROW
DECLARE
    d   VARCHAR2(20);
BEGIN
    SELECT
        a.zapvrsta
    INTO
        d
    FROM
        zaposleni a
    WHERE
        a.zapid =:new.zapid;

    IF
        ( d IS NULL OR d <> 'Agent' )
    THEN
        raise_application_error(-20223,'FK Agent_Zaposleni_FK in Table Agent violates Arc constraint on Table Zaposleni - discriminator column ZapVrsta doesn''t have value ''Agent'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_7_sekretar BEFORE
    INSERT OR UPDATE OF zapid ON sekretar
    FOR EACH ROW
DECLARE
    d   VARCHAR2(20);
BEGIN
    SELECT
        a.zapvrsta
    INTO
        d
    FROM
        zaposleni a
    WHERE
        a.zapid =:new.zapid;

    IF
        ( d IS NULL OR d <> 'Sekretar' )
    THEN
        raise_application_error(-20223,'FK Sekretar_Zaposleni_FK in Table Sekretar violates Arc constraint on Table Zaposleni - discriminator column ZapVrsta doesn''t have value ''Sekretar'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             2
-- ALTER TABLE                             51
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
